def add_discounted_item(self, item_id, name, price, stock, days_until_expiry):
        """Add a new discounted item with an expiry date."""
        with shelve.open(self.db_name, writeback=True) as db:
            discounted_items = db.setdefault("discounted_items", {})
            discounted_items[item_id] = {
                "name": name,
                "price": price,
                "stock": stock,
                "expiry_date": (datetime.now() + timedelta(days=days_until_expiry)).strftime("%Y-%m-%d"),
            }
            db["discounted_items"] = discounted_items

def get_valid_discounted_items(self):
        """Retrieve only valid (non-expired) discounted items."""
        with shelve.open(self.db_name, writeback=True) as db:
            discounted_items = db.get("discounted_items", {})
            today = datetime.now().strftime("%Y-%m-%d")

            valid_items = {
                item_id: item for item_id, item in discounted_items.items()
                if item["expiry_date"] >= today
            }

            # Optionally remove expired items
            db["discounted_items"] = valid_items

            return valid_items

def get_discounted_items(self):
        """Retrieve all discounted items."""
        with shelve.open(self.db_name) as db:
            return db.get("discounted_items", {})
